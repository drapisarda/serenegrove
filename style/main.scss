@import 'reset';
@import 'vars';
@import 'bulma';

@font-face {
  font-family: 'Quattrocento';
  src:  url('../fonts/Quattrocento/Quattrocento-Regular.ttf') format('truetype'),
}

@font-face {
  font-family: 'Lora';
  src:  url('../fonts/Lora/Lora-VariableFont_wght.ttf') format('truetype'),
}

html {
  scroll-behavior: smooth;
  font-size: 100%; /*16px*/
}

body {
  background: $bg;
  font-family: 'Lora', 'Times new roman', 'Arial', 'Helvetica', serif;
  color: $clear-1;
  min-width: 100vw;
  min-height: 100svh;
  background-color: $bg;
  font-weight: 400;
  line-height: 1.75;
}

h1, h2, h3, h4, h5 {
  margin: 3rem 0 1.38rem;
  font-family: 'Quattrocento', 'Times new roman', 'Arial', 'Helvetica', serif;
  font-weight: 600;
  line-height: 1.3;
  color: inherit;

  &:first-child {
    margin-top: 0;
  }

  .section &:first-child {
    margin-top: 0;
  }
}

h1 {
  margin-top: 0;
  font-size: 3.052rem;
}

h2 {font-size: 2.441rem;}

h3 {font-size: 1.953rem;}

h4 {font-size: 1.563rem;}

h5 {font-size: 1.25rem;}

small, .text_small {font-size: 0.8rem;}

strong {
  color: inherit;
}

em {
  font-style: italic;
}

.block {
  overflow: hidden;
}

p, ul {
  margin-bottom: 1rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.section {
  @media (max-width: 600px) {
    padding: $size-5 $size-6;
  }

  ul {
    list-style: disc;
  }

  &--clear:nth-child(even),
  &--clear:nth-child(odd) {
    color: $bg;
    background-color: $dark-2;

    .page-content > & {
      background-color: $dark-2;
    }
  }
}

.button {
  span {
    display: flex;
    align-items: center;
  }

  svg,
  img {
    max-height: 100%;
    margin-right: 0.5em;
    height: 32px;
    width: 32px;
  }
  &.success{
    background-color: $success;
    color: $clear-1;
  }

  &.inactive {
    opacity: 0.4;
    pointer-events: none;
    filter: saturate(20%);
  }

  &.is-large {
    @media (max-width: $tablet) {
      font-size: $size-6;
    }
  }

  &.is-primary {
    color: $primaryButtonText;
    background-color: $primaryButtonBg;
    border: 2px solid;
    border-color: transparent;

    svg {
      fill: $primaryButtonText;
      path {
        fill: $primaryButtonText;
      }
    }
    
    &:focus:not(:active) {
      color: $clear-1;
      border-color: $clear-1;
      box-shadow: none;
    }

    &:hover,
    &:hover:not(:active) {
      color: $primaryButtonTextHover;
      background-color: $primaryButtonBgHover;
      border-color: $primaryButtonTextHover;

      &:focus {
        border: 2px solid rgba($success, 0.7);
      }

      svg {
        fill: $primaryButtonTextHover;
        path {
          fill: $primaryButtonTextHover;
        }
      }

    }

    .section--clear &,
    .hero & {
      color: $dark-2;
      background-color: $dark-3;
      
      &:hover,
      &:hover:not(:active) {
        color: $dark-3;
        background-color: $dark-2;
        border-color: $dark-3;

        svg {
          fill: $dark-3;
          path {
            fill: $dark-3;
          }
        }
      }
    }

    &:hover img {
      filter: invert(0) brightness(0);
    }

    img {
      filter: invert(100%) brightness(2);
      margin-right: 0.5em;
    }
  }
}

.is-centered {
  text-align: center;

  &--flex {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.page-content {
  >section {
    background-color: $dark-3;
  }

  >section:nth-child(odd) {
    background-color: $dark-4;
  }
}
