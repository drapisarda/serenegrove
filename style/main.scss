@import 'reset';
@import 'vars';
//sass-flexbox-grid

$gutter: $gap;
$xs-max: $mobile; // Set xs breakpoint's max width
$sm-max: $tablet; // Set sm breakpoint's max width
$md-max: $desktop; // Set md breakpoint's max width
$lg-max: $widescreen; // Set lg breakpoint's max width

$bodyFontFamily: 'Quattrocento', 'Times new roman', 'Arial', 'Helvetica', serif;
$highlightsFontFamily: 'Lora', 'Times new roman', 'Arial', 'Helvetica', serif;

// TODO non sta generando col-md
@import './grid/main.scss';

@font-face {
  font-family: 'Quattrocento';
  src: url('../fonts/Quattrocento/Quattrocento-Regular.ttf') format('truetype');
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Quattrocento';
  src: url('../fonts/Quattrocento/Quattrocento-Bold.ttf') format('truetype');
  font-weight: bold;
  font-display: swap;
}

@font-face {
  font-family: 'Lora';
  src: url('../fonts/Lora/Lora-VariableFont_wght.ttf') format('truetype');
  font-display: swap;
}

html {
  scroll-behavior: smooth;
  font-size: 16px;
  
  @media (min-width: $tablet) {
    font-size: 18px;
  }
  box-sizing: border-box;

  &.is-clipped {
    overflow: hidden;
  }
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  background: $bg;
  font-family: $bodyFontFamily;
  color: $clear-1;
  min-width: 100vw;
  min-height: 100svh;
  font-weight: 400;
  line-height: 1.75;
}

h1,
h2,
h3,
h4,
h5 {
  margin: 3rem 0 1rem;
  font-family: $highlightsFontFamily;
  font-weight: 600;
  line-height: 1.3;
  color: inherit;

  @media (min-width: $tablet) {
    margin: 3rem 0 1.38rem;
  }

  &:first-child {
    margin-top: 0;
  }

  .section &:first-child {
    margin-top: 0;
  }
}

h1 {
  margin-top: 0;
  font-size: 2.252rem;
  @media (min-width: $tablet) {
    font-size: 2.552rem;
  }
}

h2 {
  font-size: clamp(1.4rem, -0.875rem + 8.333vw, 1.8rem);

  @media (min-width: $tablet) {
    font-size: clamp(1.7rem, -0.875rem + 8.333vw, 2rem);
  }
}

h3 {
  font-size: clamp(1.2rem, -1rem + 8.333vw, 2rem);
}

h4, h5 {
  font-size: 1.25rem;
}

small,
.text_small {
  font-size: 0.8rem;
}

strong {
  color: inherit;
  font-weight: bold;
  font-family: $highlightsFontFamily
}

em {
  font-style: italic;
}

a {
  color: $clear-2;
  text-decoration: none;

  &:active {
    color: $clear-2;
  }

  &:hover {
    color: $clear-1;
  }
}

p,
ul {
  margin-bottom: 1rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.container {
  max-width: $tablet;
  width: 100%;
  margin: auto;

  &--wide {
    max-width: $widescreen;
  }
}

.section {
  padding: $size-5 $size-6;

  @media (min-width: $tablet) {
    padding: $size-3 0;
  }

  ul {
    list-style: disc;
    list-style-position: inside;
  }

  li {
    margin-bottom: $size-7;
  }

  img {
    max-width: 100%;
    font-size: 1em;
  }

  &--clear:nth-child(even),
  &--clear:nth-child(odd) {
    color: $bg;
    background-color: $dark-2;

    .page-content>& {
      background-color: $dark-2;
    }
  }
}

.title {
  color: inherit;
}

.title,
.subtitle {
  color: inherit;

  strong {
    color: inherit;
  }
}

svg {
  max-width: 100%;
  max-height: 100%;
}

button {
  cursor: pointer;
  font-family: inherit;
}

$buttonPrimaryColor: $black;
$buttonSecondaryColor: $white;

.button {
  --button-primary-color: #{$buttonPrimaryColor};
  --button-secondary-color: #{$buttonSecondaryColor};
  color: var(--button-primary-color);
  background-color: var(--button-secondary-color);
  display: inline-flex;
  font-family: inherit;
  font-size: 1rem;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  padding: calc(.5em - 1px) 1em;
  transition: all 0.2s ease 0s;

  svg path {
    transition: all 0.2s ease 0s;
    fill: var(--button-primary-color);
    border-color: var(--primary-color);
  }

  &:hover {
    cursor: pointer;
    --button-primary-color: #{$buttonSecondaryColor};
    --button-secondary-color: #{$buttonPrimaryColor};
  }

  span {
    display: flex;
    align-items: center;
  }

  svg,
  img {
    max-height: 100%;
    margin-right: 0.5em;
    height: 32px;
    width: 32px;
  }

  &.is-large {
    font-size: 2.5em;
    padding: $size-6 $size-4;
    text-align: center;
  }

  &.is-primary {
    color: $primaryButtonText;
    background-color: $primaryButtonBg;
    border: 2px solid;
    border-color: transparent;

    svg {
      fill: $primaryButtonText;

      path {
        fill: $primaryButtonText;
      }
    }

    &:focus:not(:active) {
      color: $clear-1;
      border-color: $clear-1;
      box-shadow: none;
    }

    &:hover,
    &:hover:not(:active) {
      color: $primaryButtonTextHover;
      background-color: $primaryButtonBgHover;
      border-color: $primaryButtonTextHover;

      &:focus {
        border: 2px solid rgba($success, 0.7);
      }

      svg {
        fill: $primaryButtonTextHover;

        path {
          fill: $primaryButtonTextHover;
        }
      }

    }

    .section--clear &,
    .hero & {
      color: $dark-2;
      background-color: $dark-3;

      &:hover,
      &:hover:not(:active) {
        color: $dark-3;
        background-color: $dark-2;
        border-color: $dark-3;

        svg {
          fill: $dark-3;

          path {
            fill: $dark-3;
          }
        }
      }
    }

    &:hover img {
      filter: invert(0) brightness(0);
    }

    img {
      filter: invert(100%) brightness(2);
      margin-right: 0.5em;
    }
  }

  &.is-secondary {
    color: $white;
    background-color: transparent;
    border: 2px solid $white;

    &:hover {
      color: $dark-2;
      background-color: $dark-3;
      border-color: transparent;
    }
  }

  &--close {
    position: absolute;
    top: 0;
    right: 0;
    background-color: transparent;
    border: transparent;
    padding: $size-6 $size-7;
    width: $size-2;
    height: $size-2;
    box-sizing: content-box;
    z-index: 1;

    &:hover {
      cursor: pointer;
    }

    svg {
      margin: 0;
    }

    svg path {
      fill: $white;
    }
  }
}

button.inactive {
  opacity: 0.4;
  pointer-events: none;
  filter: saturate(20%);
  cursor: default;
}

.is-centered {
  text-align: center;

  &--flex {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.space-bottom {
  margin-bottom: $size-5;
}

.page-content {
  >section {
    background-color: $dark-3;
  }

  >section:nth-child(odd) {
    background-color: $dark-4;
  }
}


.hide,
.show,
.hide-default,
.show-default {
  transition: opacity 1s ease-in-out 0.2s;
}

.hide-default.show,
.show-default.hide {
  transition: opacity 0.1s ease-in-out 0s;
}

.hide {

  &,
  &.show-default {
    opacity: 0;
    pointer-events: none;
  }
}

.show {

  &,
  &.hide-default {
    opacity: 1;
    pointer-events: all;
  }
}

.hide-default {
  opacity: 0;
  pointer-events: none;
}

.show-default {
  opacity: 1;
  pointer-events: all;
}

label {
  display: block;
}

.input {
  width: 100%;
  height: 2.5em;
}

.row--inline {
  display: inline-flex;
  width: auto;
}

.card-header {
  font-weight: bold;
  font-family: $highlightsFontFamily;
}

.card-image {
  background-color: $dark-2;
  border-radius: $size-8;
  fill: $black;
}

.card {
  background-color: $white;
  box-shadow: $defaultBoxShadow;
  border: none;
  border-radius: $size-8;
  overflow: hidden;

  &.row {
    justify-content: center;
  }
}

.quote {
  border-left: $size-7 solid $clear-2;
  padding-left: $size-5;
  margin-top: $size-5;
  margin-bottom: $size-5;
  font-size: 1.2em;

  @media (min-width: $tablet) {
    font-size: 2em;
  }

  strong {
    color: $clear-2;
  }
}

.row.row--wide {
  >div {
    margin-top: $size-5;

    @media (min-width: $tablet) {
      margin-top: 0;
    }

    @media (min-width: $tablet) {
      padding-right: $gap*3;
      padding-left: $gap*3;
    }
  }
}

.breath-svg__breath {
  animation: breathAnim 1s forwards;
  transition: transform 1s ease-in-out;
  transform: translateX(100%);
  opacity: 0;
}

@keyframes breathAnim {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }

  30% {
    opacity: 0.1;
    transform: translateX(10%);
  }

  100% {
    opacity: 1;
    transform: translateX(0%);
  }
}

.shree-svg {
  transition: transform 1s ease-in-out;
  animation: vibeAnim 1s forwards;
}

@keyframes vibeAnim {
  0% {
    transform: scale(1);
  }

  90% {
    transform: scale(1.2);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}